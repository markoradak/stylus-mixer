body {
  background: url("https://unsplash.it/1200/1200?image=550") center;
  background-size: cover;
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3RzL3JhbmRvbS5zdHlsIiwibGliL3N0eWx1cy1taXhlci9jb21wb25lbnRzL21peGlucy91bnNwbGFzaC5zdHlsIiwibGliL3N0eWx1cy1taXhlci90b29scy92ZW5kb3JzL3Byb3BzLnN0eWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUNvSEUsWUFBVyxzREFBWDtFQzFDSyxpQkFBRSxNQUFGIiwiZmlsZSI6InJhbmRvbS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAcmVxdWlyZSAnLi4vaW5kZXguc3R5bCdcblxuYm9keVxuICB1bnNwbGFzaCAxMjAwXG4iLCIvKipcbiAqIFVuc3BsYXNoICh1bnNwbGFzaC5zdHlsKVxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBAYXV0aG9yIE1hcmtvIFJhZGFrIDxAaWFtbWFya29yYWRhaz5cbiAqIEBzaW5jZSAgMC4xLjBcbiAqIEBkZXNjICAgUHJvdmlkZXMgbWl4aW4gdGhhdCBjcmVhdGVzIGJhY2tncm91bmRcbiAqICAgICAgICAgd2l0aCB1bnNwbGFzaC5pdCB1cmwgcmFuZG9tIGltYWdlLlxuICpcbiAqICAgICAgICAgQXNpZGUgZnJvbSB0aGF0LCBpdCBhY2NlcHRzIHN0YW5kYXJkXG4gKiAgICAgICAgIHNob3J0aGFuZCBiYWNrZ3JvdW5kIHN5bnRheCArIHR3byBleHRyYVxuICogICAgICAgICBvcHRpb25zIC0gY292ZXIgYW5kIGNvbnRhaW4uXG4gKlxuICogICAgICAgICBJdCBzZXRzIHBvc2l0aW9uIGNlbnRlciBhbmQgc2l6ZSBjb3ZlclxuICogICAgICAgICBhcyBkZWZhdWx0LCBpZiBubyBvdGhlciBvcHRpb24gaXMgcHJvdmlkZWQuXG4gKlxuICogQHN5bnRheFxuICogICB1bnNwbGFzaChbbl0gP1tuXSwgPG9wdGlvbnM+LCA8YmFja2dyb3VuZC1vcHRpb25zPilcbiAqXG4gKiBAZXhhbXBsZXNcbiAqICAgdW5zcGxhc2goNTAwKVxuICogICB1bnNwbGFzaCgxOTIwIDEwODAsIGdyYXlzY2FsZSwgdG9wIGxlZnQpXG4gKiAgIHVuc3BsYXNoKDIwMDAsIGJsdXIpXG4gKiAgIHVuc3BsYXNoKDMwMDAgMTAwMCwgYmx1ciBncmF5c2NhbGUpXG4gKiAgIHVuc3BsYXNoKDIwLCByZXBlYXQpXG4gKi9cblxudW5zcGxhc2goc2l6ZSwgb3B0aW9ucy4uLilcblxuICAvLyBjcmVhdGUgb3B0aW9ucyBzdHJpbmdcbiAgJG9wdGlvbnNDaGVjayA9IGNyZWF0ZS1zdHJpbmcob3B0aW9ucylcblxuICAvLyBhc3NpZ24gYWxsIGFyZ3VtZW50cyB0byBzaXplLFxuICAvLyBpZiBvcHRpb25zIGRvZXNuJ3QgZXhpc3RcbiAgaWYgKGxlbmd0aChhcmd1bWVudHMpID4gMSAmJiAhbWF0Y2goJ2dyYXlzY2FsZXxibHVyfGNvdmVyfGNvbnRhaW58Zml4ZWR8Y2VudGVyfHJlcGVhdHxuby1yZXBlYXR8cmVwZWF0LXh8cmVwZWF0LXl8dG9wfHJpZ2h0fGJvdHRvbXxsZWZ0JywgJG9wdGlvbnNDaGVjaykpXG4gICAgc2l6ZSA9IGFyZ3VtZW50c1xuICAgIG9wdGlvbnMgPSB1bnF1b3RlKCcnKVxuXG4gIC8vIHNldCBkaWZmZXJlbnQgd2lkdGggYW5kIGhlaWdodFxuICAvLyBpZiB0d28gdmFsdWVzIGFyZSBwcm92aWRlZFxuICBpZiAobGVuZ3RoKHNpemUpID4gMSlcbiAgICAkd2lkdGggID0gc2l6ZVswXVxuICAgICRoZWlnaHQgPSBzaXplWzFdXG5cbiAgLy8gc2V0IHRoZSBzYW1lIHdpZHRoIGFuZCBoZWlnaHRcbiAgLy8gaWYgb25lIHZhbHVlIGlzIHByb3ZpZGVkXG4gIGVsc2UgaWYgKGxlbmd0aChzaXplKSA9PSAxKVxuICAgICR3aWR0aCAgPSBzaXplXG4gICAgJGhlaWdodCA9IHNpemVcblxuICAvLyB0aHJvdyBlcnJvciBvdGhlcndpc2VcbiAgZWxzZVxuICAgIGVycm9yKFwiVW5zcGxhc2ggZnVuY3Rpb24gc3VwcG9ydHMgdXAgdG8gMiB2YWx1ZXMgYXMgc2l6ZS5cIilcblxuICAvLyBzZXQgZ3JheXNjYWxlIGFuZCBibHVyIHZhcmlhYmxlc1xuICAvLyB0byBlbXB0eSB2YWx1ZXNcbiAgJGdyYXlzY2FsZSA9IHVucXVvdGUoJycpXG4gICRibHVyID0gdW5xdW90ZSgnJylcblxuICAvLyBpZiBvcHRpb25zIGV4aXN0XG4gIGlmIChvcHRpb25zKVxuXG4gICAgLy8gY3JlYXRlIG9wdGlvbnMgc3RyaW5nIGFuZFxuICAgIC8vIHJlbW92ZSBhbGwgY29tbWEgc2VwYXJhdG9yc1xuICAgICRvcHRpb25zID0gY3JlYXRlLXN0cmluZyhvcHRpb25zKVxuICAgICRvcHRpb25zID0gcmVwbGFjZSgnLCcsICcnLCAkb3B0aW9ucylcblxuICAgIC8vIHNldCBncmF5c2NhbGUgYXMgcGF0aCwgaWYgZGVmaW5lZFxuICAgIGlmIChtYXRjaCgnZ3JheXNjYWxlJywgJG9wdGlvbnNDaGVjaykpXG4gICAgICAkZ3JheXNjYWxlID0gJ2cvJ1xuICAgICAgJG9wdGlvbnMgPSByZXBsYWNlKCdncmF5c2NhbGUnLCAnJywgJG9wdGlvbnMpXG4gICAgICAkb3B0aW9ucyA9IHJlcGxhY2UoJ2NvbG9yJywgJycsICRvcHRpb25zKVxuXG4gICAgLy8gc2V0IGJsdXIgYXMgcXVlcnkgc3RyaW5nLCBpZiBkZWZpbmVkXG4gICAgaWYgKG1hdGNoKCdiJywgJG9wdGlvbnNDaGVjaykpXG4gICAgICAkYmx1ciA9ICcmYmx1cidcbiAgICAgICRvcHRpb25zID0gcmVwbGFjZSgnYmx1cicsICcnLCAkb3B0aW9ucylcblxuICAgIC8vIHJlbW92ZSAnY292ZXInIGlmIGF2YWlsYWJsZSxcbiAgICAvLyBhbmQgc2V0IGl0J3MgdmFyaWFibGUgdG8gdHJ1ZVxuICAgIGlmIChtYXRjaCgnY292ZXInLCAkb3B0aW9uc0NoZWNrKSlcbiAgICAgICRjb3ZlciA9IHRydWVcbiAgICAgICRvcHRpb25zID0gcmVwbGFjZSgnY292ZXInLCAnJywgJG9wdGlvbnMpXG5cbiAgICAvLyByZW1vdmUgJ2NvbnRhaW4nIGlmIGF2YWlsYWJsZSxcbiAgICAvLyBhbmQgc2V0IGl0J3MgdmFyaWFibGUgdG8gdHJ1ZVxuICAgIGlmIChtYXRjaCgnY29udGFpbicsICRvcHRpb25zQ2hlY2spKVxuICAgICAgJGNvbnRhaW4gPSB0cnVlXG4gICAgICAkb3B0aW9ucyA9IHJlcGxhY2UoJ2NvbnRhaW4nLCAnJywgJG9wdGlvbnMpXG5cbiAgICAvLyBmaXggJ2ZpeGVkJyBwcm9wZXJ0eVxuICAgIGlmIChtYXRjaCgnZml4ZWQnLCAkb3B0aW9uc0NoZWNrKSlcbiAgICAgICRvcHRpb25zID0gcmVwbGFjZSgnZml4ZWQnLCAndW5xdW90ZShmaXhlZCknLCAkb3B0aW9ucylcblxuICAgIC8vIGlmIG5vIGJhY2tncm91bmQgb3B0aW9ucyBhcmUgcHJvdmlkZWRcbiAgICAvLyBzZXQgZGVmYXVsdHMgLSBzaXplIGNvdmVyLCBwb3NpdGlvbiBjZW50ZXJcbiAgICBpZiAoIW1hdGNoKCdjb3Zlcnxjb250YWlufGZpeGVkfGNlbnRlcnxyZXBlYXR8bm8tcmVwZWF0fHJlcGVhdC14fHJlcGVhdC15fHRvcHxyaWdodHxib3R0b218bGVmdCcsICRvcHRpb25zQ2hlY2spKVxuICAgICAgJGNvdmVyID0gdHJ1ZVxuICAgICAgJG9wdGlvbnMgPSAnY2VudGVyJ1xuXG4gIC8vIGlmIG5vIG9wdGlvbnMgYXJlIGF2YWlsYWJsZSBzZXQgZGVmYXVsdHNcbiAgLy8gc2l6ZSBjb3ZlciwgcG9zaXRpb24gY2VudGVyXG4gIGVsc2VcbiAgICAkb3B0aW9ucyA9ICdjZW50ZXInXG4gICAgJGNvdmVyID0gdHJ1ZVxuXG4gIC8vIGNyZWF0ZSBwcm9wIGZyb20gcmVtYWluaW5nIG9wdGlvbnNcbiAgJG9wdGlvbnMgPSBjcmVhdGUtdmFsKCRvcHRpb25zKVxuXG4gIC8vIGNyZWF0ZSBiYWNrZ3JvdW5kIHVybFxuICAkdXJsID0gY3JlYXRlLXZhbCgnaHR0cHM6Ly91bnNwbGFzaC5pdC8nLCAkZ3JheXNjYWxlLCAkd2lkdGgsICcvJywgJGhlaWdodCwgJz9pbWFnZT0nLCByYW5kb20oMCwxMDAwKSwgJGJsdXIpXG4gICR1cmwgPSB1cmwoJHVybClcblxuICAvLyBqb2luIGJhY2tncm91bmQgdXJsIGFuZCBvcHRpb25zLFxuICAvLyBhbmQgY3JlYXRlIHByb3AgZnJvbSBpdFxuICAkdmFsdWUgPSBjcmVhdGUtYmxvY2soJycsICR1cmwsICRvcHRpb25zKVxuICAkdmFsdWUgPSBjcmVhdGUtdmFsKCR2YWx1ZSlcblxuICAvLyBwcmludCB2YWx1ZVxuICBiYWNrZ3JvdW5kICR2YWx1ZVxuXG4gIC8vIHByaW50ICdjb3ZlcicgaWYgdHJ1ZVxuICBpZiAoJGNvdmVyID09IHRydWUpXG4gICAgYmFja2dyb3VuZC1zaXplIGNvdmVyXG5cbiAgLy8gcHJpbnQgJ2NvbnRhaW4nIGlmIHRydWVcbiAgaWYgKCRjb250YWluID09IHRydWUpXG4gICAgYmFja2dyb3VuZC1zaXplIGNvbnRhaW5cbiIsIi8qKlxuICogUHJvcHMgKHByb3BzLnN0eWwpXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS1cbiAqIEBhdXRob3IgTWFya28gUmFkYWsgPEBpYW1tYXJrb3JhZGFrPlxuICogQHNpbmNlICAwLjEuMFxuICogQGRlc2MgICBQcm92aWRlcyBhdXRvcHJlZml4aW5nIG1peGlucyBmb3IgYWxsXG4gKiAgICAgICAgIHByb3BlcnRpZXMgdGhhdCBuZWVkIHZlbmRvciBwcmVmaXhlcy5cbiAqICAgICAgICAgVXNlcyBpbmZvcm1hdGlvbiBmcm9tICdzdXBwb3J0Lmpzb24nLlxuICovXG5cbi8vIHN1cHBvcnQgbGlzdFxudmVuZG9ycy1saXN0ID0gd2Via2l0LCBtb3osIG1zLCBvXG5cbi12ZW5kb3IoKVxuXG4gIC8vIGdldCBwcm9wXG4gIHByb3AgPSBjYWxsZWQtZnJvbVswXVxuXG4gIC8vIGZha2UgaGlnaCB2ZXJzaW9uXG4gIHNwID0gOTk5OVxuXG4gIC8vIGl0ZXJhdGVcbiAgZm9yIHZlbmRvciBpbiB2ZW5kb3JzLWxpc3RcblxuICAgIC8vIGFzaWduIGJyb3dzZXJcbiAgICBpZiB2ZW5kb3IgPT0gJ3dlYmtpdCdcbiAgICAgIGJyb3dzZXJzID0gY2hyb21lLCBzYWZhcmksIG9wZXJhLXdcblxuICAgIGVsc2UgaWYgdmVuZG9yID09ICdtb3onXG4gICAgICBicm93c2VycyA9IGZpcmVmb3hcblxuICAgIGVsc2UgaWYgdmVuZG9yID09ICdtcydcbiAgICAgIGJyb3dzZXJzID0gaWUsIGVkZ2VcblxuICAgIGVsc2VcbiAgICAgIGJyb3dzZXJzID0gb3BlcmEtb1xuXG4gICAgLy8gY3JlYXRlIGNvbmRpdGlvbmFsIG9iamVjdFxuICAgIGNvbmRpdGlvbmFsID0gKClcblxuICAgIC8vIGl0ZXJhdGVcbiAgICBmb3IgYnJvd3NlciBpbiBicm93c2Vyc1xuXG4gICAgICBjaGVjayA9IGpvaW4oJy4nLCAnc3VwcG9ydCcsIHByb3AsIGJyb3dzZXIpXG4gICAgICBjaGVjayA9IGNvbnZlcnQoY2hlY2spXG5cbiAgICAgIC8vIHN0cmlwIHVubmVjZXNhcnJ5IG9wZXJhIHRhZ3NcbiAgICAgIG1pbi1icm93c2VyID0gcmVwbGFjZSgnLXcnLCAnJywgYnJvd3NlcilcbiAgICAgIG1pbi1icm93c2VyID0gcmVwbGFjZSgnLW8nLCAnJywgbWluLWJyb3dzZXIpXG5cbiAgICAgIC8vIGFkZCAnbWluJyBzdWZmaXggdG8gYnJvd3NlciBuYW1lXG4gICAgICBtaW4tYnJvd3NlciA9IGpvaW4oJy0nLCBtaW4tYnJvd3NlciwgJ21pbicpXG4gICAgICBtaW4tYnJvd3NlciA9IGNvbnZlcnQobWluLWJyb3dzZXIpXG5cbiAgICAgIC8vIGNyZWF0ZSBydWxlXG4gICAgICBydWxlID0gam9pbignIDwgJywgbWluLWJyb3dzZXIsIGNoZWNrKVxuXG4gICAgICAvLyBwdXNoIHJ1bGUgdG8gY29uZGl0aW9uYWwgb2JqZWN0XG4gICAgICBwdXNoKGNvbmRpdGlvbmFsLCBydWxlKVxuXG4gICAgLy8gYWRkICdvcicgc3RhdGVtZW50IGlmIG11bHRpcGxlIHJ1bGVzXG4gICAgaWYgbGVuZ3RoKGNvbmRpdGlvbmFsKSA+IDFcbiAgICAgIGNvbmRpdGlvbmFsID0gam9pbignfHwnLCBjb25kaXRpb25hbClcblxuICAgIC8vIGNvbnZlcnQgY29uZGl0aW9uYWxcbiAgICBjb25kaXRpb25hbCA9IGNvbnZlcnQoY29uZGl0aW9uYWwpXG5cbiAgICAvLyBjcmVhdGUgcHJlZml4ZWQgcHJvcFxuICAgIHByZWZpeGVkUHJvcCA9IGpvaW4oJycsICctJywgdmVuZG9yLCAnLScsIHByb3ApXG4gICAgcHJlZml4ZWRQcm9wID0gdW5xdW90ZShwcmVmaXhlZFByb3ApXG5cbiAgICAvLyBhcHBseSBwcm9wIGlmIHRydWVcbiAgICBpZiBjb25kaXRpb25hbFxuICAgICAge3ByZWZpeGVkUHJvcH0gYXJndW1lbnRzXG5cbiAgLy8gcHJpbnQgZGVmYXVsdFxuICB7cHJvcH0gYXJndW1lbnRzXG5cbi8vIGtpY2tvZmYgaWYgdHJ1ZVxuaWYgYXV0by1wcmVmaXhcblxuICBmb3IgcHJvcCBpbiBzdXBwb3J0XG4gICAgdW5sZXNzIChwcm9wID09ICd0cmFuc2Zvcm0nKVxuICAgICAgZGVmaW5lKCcnICsgcHJvcCwgQCgpIHtcbiAgICAgICAgLXZlbmRvcihhcmd1bWVudHMpXG4gICAgICB9KVxuIl19 */
/*# sourceMappingURL=data:application/json;base64, */