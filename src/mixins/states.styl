/**
 * States (states.styl)
 * --------------------
 * @author OhLabsâ„¢ <@OhLabsIO> (https://ohlabs.io)
 * @since  0.1.0
 * @desc   Provides quick, short-hand like syntax
 *         for setting auto ':hover' and ':active'
 *         states.
 *
 * @syntax
 *   states <options> [n]?, <props> ...
 *
 * @examples
 *   states lighten 10%, background
 *   states darken, background, border, color
 */

states(options, props...)

  // create options

  if length(options) > 1

    type = options[0]
    percentage = options[1]

  else

    type = options
    percentage = 20%

  // hover state
  &:hover

    // iterate
    for prop in props

      // create prop string
      propCheck = create-string(prop)

      // background / background-color
      if match('background', propCheck)

        // background
        if @background
          background type(@background, percentage)

        // background-color
        else if @background-color
          background-color type(@background-color, percentage)

        // error
        else
          error('no background/background-color prop available')

      // color
      else if match('color', propCheck)

        if @color
          color type(@color, percentage)

        else
          error('no color prop available')

      // border / border-color
      else if match('border', propCheck)

        // border
        if @border

          // iterate
          for borderProp in @border

            // check type
            propType = typeof(borderProp)

            // find 'border-color' prop
            if propType == 'rgba' || propType == 'hsla'
              border-color type(borderProp, percentage)

        // border-color
        else if @border-color
          border-color type(borderProp, percentage)

        // error
        else
          error('no border/border-color prop available')

  // active state
  &:active

    // iterate
    for prop in props

      // create prop string
      propCheck = create-string(prop)

      // background / background-color
      if match('background', propCheck)

        // background
        if @background
          background type(@background, (percentage/2) )

        // background-color
        else if @background-color
          background-color type(@background-color, (percentage/2) )

        // error
        else
          error('no background/background-color prop available')

      // color
      else if match('color', propCheck)

        if @color
          color type(@color, (percentage/2) )

        else
          error('no color prop available')

      // border / border-color
      else if match('border', propCheck)

        // border
        if @border

          // iterate
          for borderProp in @border

            // check type
            propType = typeof(borderProp)

            // find 'border-color' prop
            if propType == 'rgba' || propType == 'hsla'
              border-color type(borderProp, (percentage/2) )

        // border-color
        else if @border-color
          border-color type(borderProp, (percentage/2) )

        // error
        else
          error('no border/border-color prop available')
